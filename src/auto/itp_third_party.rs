// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

#[cfg(any(feature = "v2_30", feature = "dox"))]
use glib::translate::*;
#[cfg(any(feature = "v2_30", feature = "dox"))]
use glib::GString;
use webkit2_sys;
#[cfg(any(feature = "v2_30", feature = "dox"))]
use ITPFirstParty;

glib_wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct ITPThirdParty(Shared<webkit2_sys::WebKitITPThirdParty>);

    match fn {
        ref => |ptr| webkit2_sys::webkit_itp_third_party_ref(ptr),
        unref => |ptr| webkit2_sys::webkit_itp_third_party_unref(ptr),
        get_type => || webkit2_sys::webkit_itp_third_party_get_type(),
    }
}

impl ITPThirdParty {
    #[cfg(any(feature = "v2_30", feature = "dox"))]
    pub fn get_domain(&self) -> Option<GString> {
        unsafe {
            from_glib_none(webkit2_sys::webkit_itp_third_party_get_domain(
                self.to_glib_none().0,
            ))
        }
    }

    #[cfg(any(feature = "v2_30", feature = "dox"))]
    pub fn get_first_parties(&self) -> Vec<ITPFirstParty> {
        unsafe {
            FromGlibPtrContainer::from_glib_none(
                webkit2_sys::webkit_itp_third_party_get_first_parties(self.to_glib_none().0),
            )
        }
    }
}
