// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct MimeInfo(Shared<ffi::WebKitMimeInfo>);

    match fn {
        ref => |ptr| ffi::webkit_mime_info_ref(ptr),
        unref => |ptr| ffi::webkit_mime_info_unref(ptr),
        get_type => || ffi::webkit_mime_info_get_type(),
    }
}

impl MimeInfo {
    #[doc(alias = "webkit_mime_info_get_description")]
    pub fn get_description(&self) -> Option<glib::GString> {
        unsafe { from_glib_none(ffi::webkit_mime_info_get_description(self.to_glib_none().0)) }
    }

    #[doc(alias = "webkit_mime_info_get_extensions")]
    pub fn get_extensions(&self) -> Vec<glib::GString> {
        unsafe {
            FromGlibPtrContainer::from_glib_none(ffi::webkit_mime_info_get_extensions(
                self.to_glib_none().0,
            ))
        }
    }

    #[doc(alias = "webkit_mime_info_get_mime_type")]
    pub fn get_mime_type(&self) -> Option<glib::GString> {
        unsafe { from_glib_none(ffi::webkit_mime_info_get_mime_type(self.to_glib_none().0)) }
    }
}
