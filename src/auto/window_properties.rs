// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use gdk;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;
use webkit2_sys;

glib_wrapper! {
    pub struct WindowProperties(Object<webkit2_sys::WebKitWindowProperties, webkit2_sys::WebKitWindowPropertiesClass, WindowPropertiesClass>);

    match fn {
        get_type => || webkit2_sys::webkit_window_properties_get_type(),
    }
}

pub const NONE_WINDOW_PROPERTIES: Option<&WindowProperties> = None;

pub trait WindowPropertiesExt: 'static {
    fn get_fullscreen(&self) -> bool;

    fn get_geometry(&self) -> gdk::Rectangle;

    fn get_locationbar_visible(&self) -> bool;

    fn get_menubar_visible(&self) -> bool;

    fn get_resizable(&self) -> bool;

    fn get_scrollbars_visible(&self) -> bool;

    fn get_statusbar_visible(&self) -> bool;

    fn get_toolbar_visible(&self) -> bool;
}

impl<O: IsA<WindowProperties>> WindowPropertiesExt for O {
    fn get_fullscreen(&self) -> bool {
        unsafe {
            from_glib(webkit2_sys::webkit_window_properties_get_fullscreen(
                self.as_ref().to_glib_none().0,
            ))
        }
    }

    fn get_geometry(&self) -> gdk::Rectangle {
        unsafe {
            let mut geometry = gdk::Rectangle::uninitialized();
            webkit2_sys::webkit_window_properties_get_geometry(
                self.as_ref().to_glib_none().0,
                geometry.to_glib_none_mut().0,
            );
            geometry
        }
    }

    fn get_locationbar_visible(&self) -> bool {
        unsafe {
            from_glib(
                webkit2_sys::webkit_window_properties_get_locationbar_visible(
                    self.as_ref().to_glib_none().0,
                ),
            )
        }
    }

    fn get_menubar_visible(&self) -> bool {
        unsafe {
            from_glib(webkit2_sys::webkit_window_properties_get_menubar_visible(
                self.as_ref().to_glib_none().0,
            ))
        }
    }

    fn get_resizable(&self) -> bool {
        unsafe {
            from_glib(webkit2_sys::webkit_window_properties_get_resizable(
                self.as_ref().to_glib_none().0,
            ))
        }
    }

    fn get_scrollbars_visible(&self) -> bool {
        unsafe {
            from_glib(
                webkit2_sys::webkit_window_properties_get_scrollbars_visible(
                    self.as_ref().to_glib_none().0,
                ),
            )
        }
    }

    fn get_statusbar_visible(&self) -> bool {
        unsafe {
            from_glib(webkit2_sys::webkit_window_properties_get_statusbar_visible(
                self.as_ref().to_glib_none().0,
            ))
        }
    }

    fn get_toolbar_visible(&self) -> bool {
        unsafe {
            from_glib(webkit2_sys::webkit_window_properties_get_toolbar_visible(
                self.as_ref().to_glib_none().0,
            ))
        }
    }
}

impl fmt::Display for WindowProperties {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "WindowProperties")
    }
}
