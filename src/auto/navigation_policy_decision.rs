// This file was generated by gir (0f7cd61) from gir-files (0bcaef9)
// DO NOT EDIT

#[cfg(feature = "v2_6")]
use NavigationAction;
use NavigationType;
use PolicyDecision;
use URIRequest;
use ffi;
use glib::object::IsA;
use glib::translate::*;
use glib_ffi;
use gobject_ffi;
use std::mem;
use std::ptr;

glib_wrapper! {
    pub struct NavigationPolicyDecision(Object<ffi::WebKitNavigationPolicyDecision>): PolicyDecision;

    match fn {
        get_type => || ffi::webkit_navigation_policy_decision_get_type(),
    }
}

pub trait NavigationPolicyDecisionExt {
    fn get_frame_name(&self) -> Option<String>;

    fn get_modifiers(&self) -> u32;

    fn get_mouse_button(&self) -> u32;

    #[cfg(feature = "v2_6")]
    fn get_navigation_action(&self) -> Option<NavigationAction>;

    fn get_navigation_type(&self) -> NavigationType;

    fn get_request(&self) -> Option<URIRequest>;
}

impl<O: IsA<NavigationPolicyDecision>> NavigationPolicyDecisionExt for O {
    fn get_frame_name(&self) -> Option<String> {
        unsafe {
            from_glib_none(ffi::webkit_navigation_policy_decision_get_frame_name(self.to_glib_none().0))
        }
    }

    fn get_modifiers(&self) -> u32 {
        unsafe {
            ffi::webkit_navigation_policy_decision_get_modifiers(self.to_glib_none().0)
        }
    }

    fn get_mouse_button(&self) -> u32 {
        unsafe {
            ffi::webkit_navigation_policy_decision_get_mouse_button(self.to_glib_none().0)
        }
    }

    #[cfg(feature = "v2_6")]
    fn get_navigation_action(&self) -> Option<NavigationAction> {
        unsafe {
            from_glib_none(ffi::webkit_navigation_policy_decision_get_navigation_action(self.to_glib_none().0))
        }
    }

    fn get_navigation_type(&self) -> NavigationType {
        unsafe {
            from_glib(ffi::webkit_navigation_policy_decision_get_navigation_type(self.to_glib_none().0))
        }
    }

    fn get_request(&self) -> Option<URIRequest> {
        unsafe {
            from_glib_none(ffi::webkit_navigation_policy_decision_get_request(self.to_glib_none().0))
        }
    }
}
