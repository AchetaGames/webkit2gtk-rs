// This file was generated by gir (074a1ca+) from gir-files (???)
// DO NOT EDIT

use ffi;
use glib::signal::connect;
use glib::translate::*;
use glib_ffi;
use libc;
use std::boxed::Box as Box_;
use std::mem::transmute;

glib_wrapper! {
    pub struct FaviconDatabase(Object<ffi::WebKitFaviconDatabase>);

    match fn {
        get_type => || ffi::webkit_favicon_database_get_type(),
    }
}

impl FaviconDatabase {
    pub fn clear(&self) {
        unsafe {
            ffi::webkit_favicon_database_clear(self.to_glib_none().0);
        }
    }

    //pub fn get_favicon(&self, page_uri: &str, cancellable: Option<&gio::Cancellable>, callback: /*Unknown conversion*//*Unimplemented*/AsyncReadyCallback, user_data: /*Unimplemented*/Option<Fundamental: Pointer>) {
    //    unsafe { TODO: call ffi::webkit_favicon_database_get_favicon() }
    //}

    //pub fn get_favicon_finish<T: IsA<gio::AsyncResult>>(&self, result: &T, error: /*Ignored*/Option<Error>) -> /*Ignored*/Option<cairo::Surface> {
    //    unsafe { TODO: call ffi::webkit_favicon_database_get_favicon_finish() }
    //}

    pub fn get_favicon_uri(&self, page_uri: &str) -> Option<String> {
        unsafe {
            from_glib_full(ffi::webkit_favicon_database_get_favicon_uri(self.to_glib_none().0, page_uri.to_glib_none().0))
        }
    }

    pub fn connect_favicon_changed<F: Fn(&FaviconDatabase, &str, &str) + 'static>(&self, f: F) -> u64 {
        unsafe {
            let f: Box_<Box_<Fn(&FaviconDatabase, &str, &str) + 'static>> = Box_::new(Box_::new(f));
            connect(self.to_glib_none().0, "favicon-changed",
                transmute(favicon_changed_trampoline as usize), Box_::into_raw(f) as *mut _)
        }
    }
}

unsafe extern "C" fn favicon_changed_trampoline(this: *mut ffi::WebKitFaviconDatabase, page_uri: *mut libc::c_char, favicon_uri: *mut libc::c_char, f: glib_ffi::gpointer) {
    callback_guard!();
    let f: &Box_<Fn(&FaviconDatabase, &str, &str) + 'static> = transmute(f);
    f(&from_glib_none(this), &String::from_glib_none(page_uri), &String::from_glib_none(favicon_uri))
}
